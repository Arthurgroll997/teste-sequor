// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagerBack.Database;

#nullable disable

namespace OrderManagerBack.Migrations
{
    [DbContext(typeof(OrderManagerContext))]
    [Migration("20250512231200_UpdateUserEndDate")]
    partial class UpdateUserEndDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManagerBack.Entities.Production", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("CycleTime")
                        .HasColumnType("NUMERIC(18,2)")
                        .HasColumnName("CycleTime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MaterialCode");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Order");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("NUMERIC(18,2)")
                        .HasColumnName("Quantity");

                    b.HasKey("Id");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("OrderManagerBack.Entities.User", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("EndDate");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("InitialDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("OrderManagerBack.Models.Material", b =>
                {
                    b.Property<string>("MaterialCode")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MaterialCode");

                    b.Property<string>("MaterialDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MaterialDescription");

                    b.HasKey("MaterialCode");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("OrderManagerBack.Models.Order", b =>
                {
                    b.Property<string>("OrderCode")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Order");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ProductCode");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("NUMERIC(18,2)")
                        .HasColumnName("Quantity");

                    b.HasKey("OrderCode");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OrderManagerBack.Models.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ProductCode");

                    b.Property<decimal>("CycleTime")
                        .HasColumnType("NUMERIC(18, 2)")
                        .HasColumnName("CycleTime");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Image");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ProductDescription");

                    b.HasKey("ProductCode");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProductMaterial", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("ProductCode", "MaterialCode");

                    b.HasIndex("MaterialCode");

                    b.ToTable("ProductMaterial");
                });

            modelBuilder.Entity("ProductMaterial", b =>
                {
                    b.HasOne("OrderManagerBack.Models.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderManagerBack.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
